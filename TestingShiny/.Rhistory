install.packages("tidyr")
shiny::runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
runApp('C:/Users/Ariel/Desktop/OrdinationApril2019')
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
View(Beta)
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
shiny::runApp('C:/Users/Ariel/Desktop/OrdinationApril2019')
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
shiny::runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
runApp('C:/Users/Ariel/Desktop/OrdinationApril2019')
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
install.packages(“devtools”)
install.packages("devtools")
devtools::install_github('statnet/statnetWeb')
library(statnetWeb)
run_sw()
shiny::runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
runApp('C:/Users/Ariel/Desktop/OrdinationApril2019')
library(phyloseq)
install.packages("phyloseq")
shiny::runApp('C:/Users/Ariel/Desktop/OrdinationApril2019')
runApp('C:/Users/Ariel/Downloads/Microbiome Explorer/MicrobiomeExplorer/MicrobiomeExplorer')
shiny::runApp('C:/Users/Ariel/Desktop/test')
faithful
open(faithful)
View(faithful)
faithful[, 2]
runApp('C:/Users/Ariel/Desktop/test')
runApp('C:/Users/Ariel/Desktop/test')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
cars
view(cars)
View(cars)
summary(cars)
View(cars)
plot(pressure)
library(tidyverse)
libray(devtools)
library(devtools)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidyverse)
install.packages("tidyverse")
install.packages("GGally")
mtcars
summary(mtcars)
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
data <- mtcars
#scatter plot base r blah blah blah
pairs(~ mpg + hp +cyl + wt, data = data)
library(tidyverse)
library(GGally)
data <- mtcars
#scatter plot base r blah blah blah
pairs(~ mpg + hp +cyl + wt, data = data, lower.panel = panel.smooth)
View(pressure)
View(mtcars)
library(tidyverse)
library(GGally)
data <- mtcars
#scatter plot base r blah blah blah
pairs(~ mpg + hp +cyl + wt, data = data, lower.panel = panel.smooth)
#scatter example 2
pairs(~ mpg + drat + qseq + vs, data = data)
library(tidyverse)
library(GGally)
data <- mtcars
#scatter plot base r blah blah blah
pairs(~ mpg + hp +cyl + wt, data = data, lower.panel = panel.smooth)
#scatter example 2
pairs(~ mpg + drat + qsec + vs, data = data)
library(tidyverse)
library(GGally)
data <- mtcars
ggpairs(columns = c("mpg", "hp", "cyl", "wt"), upper = list(continous = wrap('cor', size = 12)))
library(tidyverse)
library(GGally)
data <- mtcars
data %>% ggpairs(columns = c("mpg", "hp", "cyl", "wt"), upper = list(continous = wrap('cor', size = 12)))
View( data %>% mutate(cyl = factor(cyl)))
library(tidyverse)
library(GGally)
data <- mtcars
data %>% ggpairs(columns = c("mpg", "hp", "cyl", "wt"), upper = list(continous = wrap('cor', size = 12)))
data %>% mutate(cyl = factor(cyl)) %>% #This means we now are working with another variable: cyl and we know it's aggregate values or what it can be split into
ggpairs(columns = c("mpg", "hp", "wt", "cyl"),
aes(color = cyl),
upper = list(continous = wrap('cor', size = 6)),
lower = list(combo = wrap("facethist", bins = 30)),
diag = list(continous = wrap("densityDiag", alpha = 1))
)
demo()
library(stats)
nlm
nlm()
smooth
smooth()
smooth(x)
smooth(mtcars)
demo(smooth)
demo(nlm)
music = c(210, 194, 170, 110, 190, 406, 730, 290)
View(music)
dim(music) = c(2,2,2)
dimnames(music) = list(Age = c("Old", "Young"),
Education = c("High", "Low"),
Listen = c("Classical", "Other"))
View(music)
musaicplot(music)
mosaicplot(music)
mosaicplot(music)
mosaicplot(music, col = hcl(240), main = "Classical music")
mosaicplot(music, col = c(hcl(240),hcl(120)), main = "Classical music")
mosaicplot(music, col = c(hcl(240),hcl(120), hcl(60)), main = "Classical music")
mosaicplot(music, col = c(hcl(240),hcl(120), hcl(60), hcl(30)), main = "Classical music")
data(Iris)
data(iris)
View(iris)
mosaicplot(music, col = c(hcl(240),hcl(120)), main = "Classical music")
music = c(210, 194, 170, 110, 190, 406, 730, 290)
dim(music) = c(2, 2, 2)
dimnames(music) = list(Age = c("Old", "Young"),
Education = c("High", "Low"),
Listen = c("Classical", "Other"))
View(music)
util::View(music)
library(utils)
utils::View(music)
View(as.data.frame(music))
library(statnetWeb)
run_sw()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
install.packages("viridis")
library(hrbrthemes)
install.packages(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
View(data)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data)
View(iris)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "allClass",
showPoints = TRUE
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
#showPoints = TRUE
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE
title = "Hey we made parallel plot and iris stuff whatev"
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE
title = "Hey we made parallel plot and iris stuff whatev",
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = 1
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_binned()
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_brewer()
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 20))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
knitr::opts_chunk$set(echo = TRUE)
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "globalminmax",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
#scale = "globalminmax",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "globalminmax",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "uniminmax",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "center",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "std",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_viridis(discrete = TRUE) + theme_ipsum() + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
data %>% arrange(desc(Species)) %>%
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "std",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_manual(values=c( "#69b3a2", "#E8E8E8", "#E8E8E8") ) theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
data <- iris
summary(data)
data %>% arrange(desc(Species)) %>%
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "std",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_manual(values=c( "#69b3a2", "#E8E8E8", "#E8E8E8") ) + theme(plot.title = element_text(size = 10))
library(hrbrthemes)
library(GGally)
library(viridis)
library(dplyr)
data <- iris
summary(data)
data %>% arrange(desc(Species)) %>%
ggparcoord(data,
columns = 1:4, groupColumn = 5, order = "anyClass",
showPoints = TRUE,
scale = "std",
title = "Hey we made parallel plot and iris stuff whatev",
alphaLines = .3
) +
scale_color_manual(values=c( "#69b3a2", "#E8E8E8", "#E8E8E8") ) + theme(plot.title = element_text(size = 10))
devtools::install_github("hrbrmstr/streamgraph")
library(streamgraph)
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
summary(iris)
seq(1990, 2016)
rep(seq(1990, 2016), 10)
rep(letters[1:10 , 27])
rep(letters[1:10] , 27)
View(seq(0, 1, 0.0001))
sample(seq(0, 1, 0.0001), 270)
sample(seq(0, 1, 0.0001), 270)
sample(seq(0, 1, 0.0001), 270)
View(sample(seq(0, 1, 0.0001), 270))
randdata <- data.frame(
year = rep(seq(1990, 2016), each = 10),
name = rep(letters[1:10] , 27),
value = sample(seq(0, 1, 0.0001), 270)
)
View(randdata)
summary(iris)
library(streamgraph)
randdata <- data.frame(
year = rep(seq(1990, 2016), each = 10),
name = rep(letters[1:10] , 27),
value = sample(seq(0, 1, 0.0001), 270)
)
prettyPlot <- streamgraph(randdata, key ="name" value = "value", date = "year", height = "300px", width = "1000px") %>% sg_legend(show TRUE, label = "names : ")
summary(iris)
library(streamgraph)
randdata <- data.frame(
year = rep(seq(1990, 2016), each = 10),
name = rep(letters[1:10] , 27),
value = sample(seq(0, 1, 0.0001), 270)
)
prettyPlot <- streamgraph(randdata, key ="name", value = "value", date = "year", height = "300px", width = "1000px") %>% sg_legend(show TRUE, label = "names : ")
summary(iris)
library(streamgraph)
randdata <- data.frame(
year = rep(seq(1990, 2016), each = 10),
name = rep(letters[1:10] , 27),
value = sample(seq(0, 1, 0.0001), 270)
)
prettyPlot <- streamgraph(randdata, key ="name", value = "value", date = "year", height = "300px", width = "1000px") %>% sg_legend(show = TRUE, label = "names : ")
prettyplot
prettyPlot
save.image("C:/Users/Ariel/Desktop/oldREnv.RData")
clear
shiny::runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
runApp('C:/Users/Ariel/Desktop/TestingShiny')
